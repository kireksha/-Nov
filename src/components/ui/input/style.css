.x-input {
	position: relative;
	display: flex;
	border-radius: 0.25rem;
	border-color: rgba(255, 255, 255, 0.15);
}

.x-input-before,
.x-input-after,
.x-input-prepend,
.x-input-append {
	display: flex;
	align-content: center;
	align-items: center;
}

.x-input-before {
	margin-right: 0.5rem;
}

.x-input-after {
	margin-left: 0.5rem;
}

.x-input-prepend,
.x-input-append {
	padding-left: 0.5rem;
	padding-right: 0.5rem;
}

.x-input-container,
.x-input-control {
	position: relative;
	display: flex;
	flex: 1 1;
	border-radius: inherit;
	border-color: inherit;
}

.x-input-native {
	display: block;
	width: 100%;
	background-color: transparent;
	padding-left: 0.5rem;
	padding-right: 0.5rem;
	padding-top: 1.5rem;
	padding-bottom: 0.5rem;
	outline: 2px solid transparent;
	outline-offset: 2px;
	transition-property: all;
	transition-duration: 200ms;
	transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
}

.x-input-native::placeholder {
	opacity: 0;
}

.x-input-native:focus {
	outline: 2px solid transparent;
	outline-offset: 2px;
}

.x-input-native:focus::placeholder {
	opacity: 1;
}

.x-input-label {
	pointer-events: none;
	position: absolute;
	left: 0px;
	top: 50%;
	margin-left: 0.5rem;
	max-width: calc(100% - 2rem);
	--tw-translate-y: -50%;
	transform: translate(var(--tw-translate-x), var(--tw-translate-y))
		rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y))
		scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
	overflow: hidden;
	text-overflow: ellipsis;
	white-space: nowrap;
	opacity: 0.7;
	transition-property: all;
	transition-duration: 200ms;
	transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
}

.x-input:has(input:focus) .x-input-label {
	opacity: 1;
}

.x-input-control:not(:has(*.x-input-label)) .x-input-native {
	padding-top: 1rem;
	padding-bottom: 1rem;
}

.x-input--stack-label .x-input-native::placeholder {
	opacity: 1;
}

.x-input--stack-label .x-input-native ~ .x-input-label,
.x-input-native:focus ~ .x-input-label,
.x-input-native:not(:placeholder-shown) ~ .x-input-label {
	top: 1rem;
	font-size: 0.8em;
}

.x-input--dense .x-input-native {
	padding-top: 0.75rem;
	padding-bottom: 0.25rem;
}
.x-input--dense .x-input-native:focus ~ .x-input-label,
.x-input--dense .x-input-native:not(:placeholder-shown) ~ .x-input-label {
	top: 0.5rem;
	font-size: 0.8em;
}
.x-input--dense .x-input-control:not(:has(*.x-input-label)) .x-input-native {
	padding-top: 0.5rem;
	padding-bottom: 0.5rem;
}

.x-input--dense.x-input--stack-label .x-input-native ~ .x-input-label {
	top: 0.5rem;
	font-size: 0.8em;
}

.x-input-backdor {
	position: absolute;
	top: 0px;
	left: 0px;
	z-index: -10;
	box-sizing: border-box;
	display: none;
	height: 100%;
	width: 100%;
	border-radius: inherit;
	--tw-text-opacity: 1;
	color: rgb(0 0 0 / var(--tw-text-opacity));
	--tw-contain-layout: layout;
	contain: var(--tw-contain-size) var(--tw-contain-layout) var(--tw-contain-paint)
		var(--tw-contain-style);
	background-color: color-mix(in srgb, currentColor 20%, transparent);
}

.x-input-underlined {
	position: absolute;
	bottom: 0px;
	left: 0px;
	box-sizing: border-box;
	display: none;
	width: 100%;
	border-radius: inherit;
	border-bottom-width: 1px;
	border-color: inherit;
	--tw-contain-layout: layout;
	contain: var(--tw-contain-size) var(--tw-contain-layout) var(--tw-contain-paint)
		var(--tw-contain-style);
	z-index: -1;
}

.x-input-outline {
	pointer-events: none;
	position: absolute;
	top: 0px;
	left: 0px;
	right: 0px;
	display: none;
	height: 100%;
	width: 100%;
	align-items: stretch;
	border-radius: inherit;
	border-color: inherit;
	transition-property: border;
	transition-duration: 200ms;
	transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
}

.x-input-outline > * {
	border-top-width: 1px;
	border-bottom-width: 1px;
	border-color: inherit;
	transition-property: border;
	transition-duration: 200ms;
	transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
}

.x-input-outline > *:first-child {
	border-top-left-radius: inherit;
	border-bottom-left-radius: inherit;
	border-left-width: 1px;
}

.x-input-outline > *:last-child {
	border-top-right-radius: inherit;
	border-bottom-right-radius: inherit;
	border-right-width: 1px;
}

.x-input-outline-start {
	flex: 0 0 0.75rem;
}

.x-input-outline-notch {
	max-width: calc(100% - 0.75rem);
	flex: none;
}

.x-input-outline-end {
	flex: 1 1;
}

.x-input-outline .x-input-label {
	visibility: hidden;
	position: relative;
	top: calc(calc(50% - 0.4em) * -1);
	margin-left: 0.25rem;
	margin-right: 0.25rem;
	font-size: 0.8em;
}

.x-input--outline .x-input-outline {
	display: flex;
}

.x-input--outline.x-input--dense .x-input-control .x-input-native {
	padding-top: 0.5rem;
	padding-bottom: 0.5rem;
}
.x-input--outline.x-input--dense .x-input-control:has(input:focus) .x-input-label,
.x-input--outline.x-input--dense
	.x-input-control:has(input:not(:placeholder-shown))
	.x-input-label {
	top: 0px;
	margin-left: 1rem;
}
.x-input--outline.x-input--dense
	.x-input-control:has(input:focus)
	~ .x-input-outline
	> .x-input-outline-notch,
.x-input--outline.x-input--dense
	.x-input-control:has(input:not(:placeholder-shown))
	~ .x-input-outline
	> .x-input-outline-notch {
	border-top-color: transparent;
}

.x-input--dense.x-input--outline.x-input--stack-label .x-input-control .x-input-native {
	padding-top: 0.5rem;
	padding-bottom: 0.5rem;
}
.x-input--dense.x-input--outline.x-input--stack-label .x-input-control .x-input-label {
	top: 0px;
	margin-left: 1rem;
}
.x-input--dense.x-input--outline.x-input--stack-label
	.x-input-outline
	.x-input-outline-notch {
	border-top-color: transparent;
}

.x-input--square {
	border-radius: 0px;
}

.x-input--underlined .x-input-underlined {
	display: block;
}

.x-input--underlined:has(input:focus) .x-input-underlined {
	border-bottom-width: 3px;
}

.x-input--disabled {
	cursor: not-allowed;
	opacity: 0.5;
}

.x-input--disabled .x-input-native {
	pointer-events: none;
}

.x-input:has(input:focus) {
	--tw-border-opacity: 1;
	border-color: rgb(37 99 235 / var(--tw-border-opacity));
}

.x-input--field .x-input-backdor {
	display: block;
}

.x-input--primary:has(input:focus) {
	--tw-border-opacity: 1;
	border-color: rgb(25 118 210 / var(--tw-border-opacity));
}

.x-input--primary .x-input-backdor {
	--tw-text-opacity: 1;
	color: rgb(25 118 210 / var(--tw-text-opacity));
}

.x-input--secondary:has(input:focus) {
	--tw-border-opacity: 1;
	border-color: rgb(92 187 246 / var(--tw-border-opacity));
}

.x-input--secondary .x-input-backdor {
	--tw-text-opacity: 1;
	color: rgb(92 187 246 / var(--tw-text-opacity));
}

.x-input--accent:has(input:focus) {
	--tw-border-opacity: 1;
	border-color: rgb(156 39 176 / var(--tw-border-opacity));
}

.x-input--accent .x-input-backdor {
	--tw-text-opacity: 1;
	color: rgb(156 39 176 / var(--tw-text-opacity));
}

.x-input--positive:has(input:focus) {
	--tw-border-opacity: 1;
	border-color: rgb(76 175 80 / var(--tw-border-opacity));
}

.x-input--positive .x-input-backdor {
	--tw-text-opacity: 1;
	color: rgb(76 175 80 / var(--tw-text-opacity));
}

.x-input--negative:has(input:focus) {
	--tw-border-opacity: 1;
	border-color: rgb(220 53 69 / var(--tw-border-opacity));
}

.x-input--negative .x-input-backdor {
	--tw-text-opacity: 1;
	color: rgb(220 53 69 / var(--tw-text-opacity));
}

.x-input--info:has(input:focus) {
	--tw-border-opacity: 1;
	border-color: rgb(33 150 243 / var(--tw-border-opacity));
}

.x-input--info .x-input-backdor {
	--tw-text-opacity: 1;
	color: rgb(33 150 243 / var(--tw-text-opacity));
}

.x-input--warning:has(input:focus) {
	--tw-border-opacity: 1;
	border-color: rgb(251 140 0 / var(--tw-border-opacity));
}

.x-input--warning .x-input-backdor {
	--tw-text-opacity: 1;
	color: rgb(251 140 0 / var(--tw-text-opacity));
}

.x-input--surface:has(input:focus) {
	--tw-border-opacity: 1;
	border-color: rgb(21 23 30 / var(--tw-border-opacity));
}

.x-input--surface .x-input-backdor {
	--tw-text-opacity: 1;
	color: rgb(21 23 30 / var(--tw-text-opacity));
}

.x-input--dark:has(input:focus) {
	--tw-border-opacity: 1;
	border-color: rgb(21 23 30 / var(--tw-border-opacity));
}

.x-input--dark .x-input-backdor {
	--tw-text-opacity: 1;
	color: rgb(21 23 30 / var(--tw-text-opacity));
}
